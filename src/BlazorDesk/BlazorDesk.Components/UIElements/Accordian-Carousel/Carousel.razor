@namespace BlazorDesk.Components
@inject IJSRuntime JS
<div id="@Identifier" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
        @for (int i = 0; i < Items.Count; i++)
        {
            <li data-target="#@Identifier" data-slide-to="@i" class='@(i==0 ? "active" : string.Empty)'></li>
        }
    </ol>

    <div class="carousel-inner">

        @for (int i = 0; i < Items.Count; i++)
        {
            <div class="carousel-item@(i == Items.Count - 1 ? " active carousel-item-left" : string.Empty) @(i==0 ? " carousel-item-next carousel-item-left" : string.Empty)">
                <img class='d-block w-100' src="@Items[i].Image" alt="@Items[i].Alt">
            </div>
        }
    </div>
    <a class="carousel-control-prev" href="#@Identifier" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#@Identifier" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>
@code {
    [Parameter] public string Identifier { get; set; } = "carouselExampleIndicators";
    [Parameter] public CarouselItemCollection Items { get; set; }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
           JS.InvokeVoidAsync("carousel", "#" + Identifier);
        }
        return base.OnAfterRenderAsync(firstRender);
    }
}
